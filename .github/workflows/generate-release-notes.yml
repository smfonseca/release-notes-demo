name: Generate Release Notes

on:
  workflow_dispatch:

env:
  LATEST_VERSIONS: ${{ secrets.LATEST_VERSIONS }}

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Dependencies
        run: pnpm install simple-git marked

      - name: Debug LATEST_VERSIONS
        run: |
          if [ -n "$LATEST_VERSIONS" ]; then
            echo "LATEST_VERSIONS is set and has ${#LATEST_VERSIONS} characters."
          else
            echo "LATEST_VERSIONS is empty or undefined."
          fi
        env:
          LATEST_VERSIONS: ${{ secrets.LATEST_VERSIONS }}

      - name: Run Changelog Script
        id: changelog
        env:
          LATEST_VERSIONS: ${{ secrets.LATEST_VERSIONS }}
        run: |
          LATEST_VERSIONS=${{ secrets.LATEST_VERSIONS }} node ./scripts/generate-release-notes.cjs

      - name: Upload Teams Output
        if: steps.changelog.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: output_teams
          path: ./output/output_teams.html

      - name: Upload Universum Output
        if: steps.changelog.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: output_universum
          path: ./output/output_universum.html

      - name: Update LATEST_VERSIONS Secret
        if: steps.changelog.outputs.has_changes == 'true'
        uses: lannonbr/set-action-secret@v1.0.0
        with:
          secret_name: LATEST_VERSIONS
          secret_value: ${{ steps.changelog.outputs.latest_versions }}
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        # env:
        #   LATEST_VERSIONS: ${{ steps.changelog.outputs.latest_versions }}
        #   GH_TOKEN: ${{ secrets.GH_PAT }}
        # run: |
        #   # Remove newlines, carriage returns, and trim spaces
        #   cleaned_versions=$(echo "$LATEST_VERSIONS" | tr -d '\n' | tr -d '\r' | xargs)
        #   echo "Cleaned LATEST_VERSIONS: '$cleaned_versions'"
        #   echo "$cleaned_versions" | gh secret set LATEST_VERSIONS --app actions --body -

      # - name: Verify Updated Secret
      #   run: |
      #     echo "Verifying updated LATEST_VERSIONS"
      #     echo "$LATEST_VERSIONS" | cat -A
      #   env:
      #     LATEST_VERSIONS: ${{ secrets.LATEST_VERSIONS }}
